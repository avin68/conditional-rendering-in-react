{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FUJITSU\\\\Desktop\\\\WEB\\\\react\\\\09-cond-rendering\\\\videos\\\\react-conditional-rendering\\\\conditional-rendering-in-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [isLogin, setIsLogin] = useState(true);\n  if (isLogin == true) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"user has logined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 20\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"user has not logined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 20\n    }, this);\n  }\n}\n_s(App, \"RXdkWgPVdKIgYtmGlW9B2J9vBbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","isLogin","setIsLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/FUJITSU/Desktop/WEB/react/09-cond-rendering/videos/react-conditional-rendering/conditional-rendering-in-react/src/App.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nfunction App(){\r\n    let[isLogin , setIsLogin] = useState(true)\r\n    \r\n        if(isLogin == true){\r\n            return <h2>user has logined</h2>\r\n        }\r\n        else{\r\n            return <h2>user has not logined</h2>\r\n        }\r\n    }\r\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACV,IAAG,CAACC,OAAO,EAAGC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtC,IAAGK,OAAO,IAAI,IAAI,EAAC;IACf,oBAAOH,OAAA;MAAAK,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACpC,CAAC,MACG;IACA,oBAAOT,OAAA;MAAAK,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACxC;AACJ;AAACP,EAAA,CATID,GAAG;AAAAS,EAAA,GAAHT,GAAG;AAUZ,eAAeA,GAAG;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}