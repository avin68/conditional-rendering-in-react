{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FUJITSU\\\\Desktop\\\\WEB\\\\react\\\\09-cond-rendering\\\\videos\\\\react-conditional-rendering\\\\conditional-rendering-in-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [isLogin, setIsLogin] = useState(true);\n\n  // if(isLogin == true){\n  // if(isLogin){\n  //     return <h2>user has logined</h2>\n  // }\n  // else{\n  //     return <h2>user has not logined</h2>\n  // }\n  return isLogin && /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"user has logined\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 27\n  }, this);\n}\n_s(App, \"RXdkWgPVdKIgYtmGlW9B2J9vBbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","isLogin","setIsLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/FUJITSU/Desktop/WEB/react/09-cond-rendering/videos/react-conditional-rendering/conditional-rendering-in-react/src/App.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nfunction App(){\r\n    let[isLogin , setIsLogin] = useState(true)\r\n    \r\n        // if(isLogin == true){\r\n        // if(isLogin){\r\n        //     return <h2>user has logined</h2>\r\n        // }\r\n        // else{\r\n        //     return <h2>user has not logined</h2>\r\n        // }\r\n        return(isLogin && <h2>user has logined</h2>)\r\n    }\r\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACV,IAAG,CAACC,OAAO,EAAGC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAOK,OAAO,iBAAIH,OAAA;IAAAK,QAAA,EAAI;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC/C;AAACP,EAAA,CAXID,GAAG;AAAAS,EAAA,GAAHT,GAAG;AAYZ,eAAeA,GAAG;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}